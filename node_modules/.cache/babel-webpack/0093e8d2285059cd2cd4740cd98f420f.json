{"ast":null,"code":"import _asyncToGenerator from \"/home/xittz/Documentos/sa-bombeiros3/sa-bombeiros/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/valvula.service\";\nimport * as i2 from \"../services/mangueira.service\";\nexport class TelaConfigComponent {\n  constructor(valvulaService, mangueiraService) {\n    this.valvulaService = valvulaService;\n    this.mangueiraService = mangueiraService;\n    this.xmlHttp = new XMLHttpRequest();\n    this.detalhes = true;\n    this.mangueiras = [];\n    this.valvulas = [];\n    this.dao();\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.valvulas = yield _this.valvulaService.list();\n      _this.mangueiras = yield _this.mangueiraService.list();\n    })();\n  }\n\n  ngOnDestroy() {}\n\n  deletaProd(id) {\n    function reqListener() {\n      console.log('tentou excluir ', id);\n    }\n\n    ;\n    var oReq = new XMLHttpRequest();\n    oReq.onload = reqListener;\n    oReq.open(\"DELETE\", \"http://localhost:51230/api/logs/deletar/plan/\" + id + \"\", true);\n    oReq.send();\n    this.dao();\n    this.load();\n  }\n\n  detalhesProd(id) {\n    this.detalhesId = id;\n    this.detalhes = !this.detalhes;\n    console.log(this.detalhesId);\n  }\n\n  dao() {\n    //CONEXAO COM A API\n    function getPlanilha() {\n      return _getPlanilha.apply(this, arguments);\n    } //promisses\n\n\n    function _getPlanilha() {\n      _getPlanilha = _asyncToGenerator(function* () {\n        const response = yield fetch(`http://localhost:51230/api/logs/producao/plan/`);\n        return yield response.json();\n      });\n      return _getPlanilha.apply(this, arguments);\n    }\n\n    getPlanilha().then(planilha => this.planilha = planilha);\n  }\n\n  load() {\n    //Session storage salva os dados como string\n    (sessionStorage.refresh == 'true' || !sessionStorage.refresh) && location.reload();\n    sessionStorage.refresh = true;\n  }\n\n}\n\nTelaConfigComponent.ɵfac = function TelaConfigComponent_Factory(t) {\n  return new (t || TelaConfigComponent)(i0.ɵɵdirectiveInject(i1.ValvulaService), i0.ɵɵdirectiveInject(i2.MangueiraService));\n};\n\nTelaConfigComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TelaConfigComponent,\n  selectors: [[\"app-tela-relatorio\"]],\n  inputs: {\n    planilha: \"planilha\"\n  },\n  decls: 5,\n  vars: 0,\n  consts: [[\"id\", \"titulo01\"], [\"id\", \"flex-container\"], [\"id\", \"buttonPDF\", 3, \"click\"]],\n  template: function TelaConfigComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Relat\\u00F3rio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function TelaConfigComponent_Template_button_click_3_listener() {\n        return ctx.baixarPDF();\n      });\n      i0.ɵɵtext(4, \"Baixar PDF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"#flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n#titulo01[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin-top: 4em;\\n  justify-content: center;\\n}\\n\\n#buttonPDF[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n  outline: 0;\\n  border: 2px gray;\\n  border-radius: 10px;\\n  background-color: transparent;\\n  border-style: solid;\\n  margin-top: -21em;\\n  font-size: 22px;\\n  width: 10em;\\n  height: 30px;\\n  transition: 500ms;\\n}\\n\\n#buttonPDF[_ngcontent-%COMP%]:hover {\\n  color: white;\\n  background-color: red;\\n  transform: scale(1.02);\\n  box-shadow: 0px 5px 15px red;\\n  border: red solid;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbGEtcmVsYXRvcmlvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUdBO0VBQ0ksYUFBQTtFQUNBLGVBQUE7RUFDQSx1QkFBQTtBQUFKOztBQUdBO0VBRVEsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSw2QkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQURSOztBQUtBO0VBRUksWUFBQTtFQUNBLHFCQUFBO0VBQ0Esc0JBQUE7RUFDQSw0QkFBQTtFQUNBLGlCQUFBO0FBSEoiLCJmaWxlIjoidGVsYS1yZWxhdG9yaW8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjZmxleC1jb250YWluZXJ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBcbn1cblxuI3RpdHVsbzAxe1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luLXRvcDogNGVtO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4jYnV0dG9uUERGe1xuXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIG91dGxpbmU6IDA7XG4gICAgICAgIGJvcmRlcjogMnB4IGdyYXk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICBtYXJnaW4tdG9wOiAtMjFlbTtcbiAgICAgICAgZm9udC1zaXplOjIycHg7XG4gICAgICAgIHdpZHRoOiAxMGVtO1xuICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICAgIHRyYW5zaXRpb246IDUwMG1zO1xuICAgICAgXG59XG5cbiNidXR0b25QREY6aG92ZXJ7XG5cbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMik7XG4gICAgYm94LXNoYWRvdzogMHB4IDVweCAxNXB4IHJlZDtcbiAgICBib3JkZXI6IHJlZCBzb2xpZCA7XG4gIH1cbiAgIl19 */\"]\n});","map":{"version":3,"sources":["/home/xittz/Documentos/sa-bombeiros3/sa-bombeiros/src/app/tela-relatorio/tela-relatorio.component.ts","/home/xittz/Documentos/sa-bombeiros3/sa-bombeiros/src/app/tela-relatorio/tela-relatorio.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injectable, Input, OnInit } from '@angular/core';\nimport { mangueira } from '../models/mangueira';\nimport { valvula } from '../models/valvula';\nimport { MangueiraService } from '../services/mangueira.service';\nimport { ValvulaService } from '../services/valvula.service';\n\n@Component({\n  selector: 'app-tela-relatorio',\n  templateUrl: './tela-relatorio.component.html',\n  styleUrls: ['./tela-relatorio.component.scss']\n})\n\n\n\n\n\nexport class TelaConfigComponent implements OnInit{ \n\n  @Input('planilha') public planilha: any;\n  public xmlHttp = new XMLHttpRequest();\n  public detalhes: boolean = true\n  public detalhesId: number | undefined;\n\n  mangueiras: mangueira[] = [];\n  valvulas: valvula[] = [];\n\n  constructor(private valvulaService:ValvulaService, private mangueiraService:MangueiraService) { this.dao();}\n\n  async ngOnInit(): Promise<void> {\n\n      this.valvulas = await this.valvulaService.list();\n     this.mangueiras = await this.mangueiraService.list();    \n  \n    }\n\n\n  ngOnDestroy(){\n\n  }\n\n\n   public deletaProd(id: any){\n    function reqListener () {\n      console.log('tentou excluir ',id)\n\n    };\n\n    var oReq = new XMLHttpRequest();\n    oReq.onload = reqListener;\n    oReq.open(\"DELETE\", \"http://localhost:51230/api/logs/deletar/plan/\"+id+\"\", true);\n    oReq.send();\n    this.dao();\n    this.load();\n  }\n\n\n  public detalhesProd(id: any){\n    this.detalhesId = id;\n    this.detalhes = !this.detalhes;\n    console.log(this.detalhesId)\n  }\n\n  dao(){\n//CONEXAO COM A API\nasync function getPlanilha()\n{\n  const response = await fetch(`http://localhost:51230/api/logs/producao/plan/`);\n  return await response.json();\n}\n\n//promisses\ngetPlanilha()\n  .then((planilha) => this.planilha = planilha)\n}\n\nload() {\n  //Session storage salva os dados como string\n\n  (sessionStorage.refresh == 'true' || !sessionStorage.refresh) && location.reload();\n  sessionStorage.refresh = true;\n\n}\n\n}\n","<h1 id=\"titulo01\">Relatório</h1>\n<div id=\"flex-container\">\n\n\n\n<button id=\"buttonPDF\" (click)=\"baixarPDF()\">Baixar PDF</button>\n\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}