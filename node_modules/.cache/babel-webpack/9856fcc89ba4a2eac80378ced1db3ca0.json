{"ast":null,"code":"import _asyncToGenerator from \"/home/xittz/Documentos/sa-bombeiros3/sa-bombeiros/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BombeirosService {\n  constructor(http) {\n    this.http = http;\n    this.url = environment.apiUrl + 'bombeiro';\n  }\n\n  create(bombeiro) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const bombeiroCriado = yield _this.http.post(_this.url, bombeiro).toPromise();\n      return bombeiroCriado;\n    })();\n  }\n\n  read(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const bombeiros = yield _this2.http.get(_this2.url + '/' + id).toPromise();\n      return bombeiros;\n    })();\n  }\n\n  update(id, bombeiro) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const bombeiroUpdate = yield _this3.http.put(_this3.url + '/' + bombeiro.id, bombeiro).toPromise();\n      return bombeiroUpdate;\n    })();\n  }\n\n  delete(id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this4.http.delete(_this4.url + '/' + id).toPromise();\n    })();\n  }\n\n  list() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const bombeiroList = yield _this5.http.get(_this5.url).toPromise();\n      return bombeiroList;\n    })();\n  }\n\n}\n\nBombeirosService.ɵfac = function BombeirosService_Factory(t) {\n  return new (t || BombeirosService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nBombeirosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BombeirosService,\n  factory: BombeirosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/xittz/Documentos/sa-bombeiros3/sa-bombeiros/src/app/services/bombeiro.service.ts"],"names":[],"mappings":";AAGA,SAAS,WAAT,QAA4B,8BAA5B;;;AAKA,OAAM,MAAO,gBAAP,CAAuB;AAG3B,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,SAAA,IAAA,GAAA,IAAA;AAFpB,SAAA,GAAA,GAAc,WAAW,CAAC,MAAZ,GAAqB,UAAnC;AAEyC;;AACnC,EAAA,MAAM,CAAC,QAAD,EAAmB;AAAA;;AAAA;AAC7B,YAAM,cAAc,SAAS,KAAI,CAAC,IAAL,CAAU,IAAV,CAAe,KAAI,CAAC,GAApB,EAAyB,QAAzB,EAAmC,SAAnC,EAA7B;AACA,aAAO,cAAP;AAF6B;AAG9B;;AACK,EAAA,IAAI,CAAC,EAAD,EAAW;AAAA;;AAAA;AACnB,YAAM,SAAS,SAAS,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,MAAI,CAAC,GAAL,GAAU,GAAV,GAAgB,EAA9B,EAAkC,SAAlC,EAAxB;AACA,aAAO,SAAP;AAFmB;AAGpB;;AACK,EAAA,MAAM,CAAC,EAAD,EAAa,QAAb,EAA+B;AAAA;;AAAA;AACxC,YAAM,cAAc,SAAS,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,MAAI,CAAC,GAAL,GAAW,GAAX,GAAiB,QAAQ,CAAC,EAAxC,EAA4C,QAA5C,EAAsD,SAAtD,EAA7B;AAEA,aAAO,cAAP;AAHwC;AAI1C;;AACK,EAAA,MAAM,CAAC,EAAD,EAAW;AAAA;;AAAA;AACtB,YAAO,MAAI,CAAC,IAAL,CAAU,MAAV,CAAiB,MAAI,CAAC,GAAL,GAAW,GAAX,GAAiB,EAAlC,EAAsC,SAAtC,EAAP;AADsB;AAEtB;;AAEK,EAAA,IAAI,GAAA;AAAA;;AAAA;AACR,YAAM,YAAY,SAAS,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,MAAI,CAAC,GAAnB,EAAwB,SAAxB,EAA3B;AAEA,aAAO,YAAP;AAHQ;AAIT;;AAzB0B;;;mBAAhB,gB,EAAgB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAhB,gB;AAAgB,EAAA,OAAA,EAAhB,gBAAgB,CAAA,I;AAAA,EAAA,UAAA,EAFf","sourcesContent":["import { bombeiro } from './../models/bombeiro';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BombeirosService {\n  url: string = environment.apiUrl + 'bombeiro';\n\n  constructor(private http: HttpClient) { }\n  async create(bombeiro: bombeiro) {\n    const bombeiroCriado = await this.http.post(this.url, bombeiro).toPromise(); \n    return bombeiroCriado;\n  }\n  async read(id: number) {\n    const bombeiros = await this.http.get(this.url+ '/' + id).toPromise(); \n    return bombeiros;\n  }\n  async update(id: number ,bombeiro: bombeiro) {\n     const bombeiroUpdate = await this.http.put(this.url + '/' + bombeiro.id, bombeiro).toPromise()\n\n     return bombeiroUpdate;\n  }\n  async delete(id: number) {\n   await  this.http.delete(this.url + '/' + id).toPromise();\n  }\n\n  async list() {\n    const bombeiroList = await this.http.get(this.url).toPromise(); \n  \n    return bombeiroList;\n  }\n\n\n\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}