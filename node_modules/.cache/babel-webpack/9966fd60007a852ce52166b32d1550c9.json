{"ast":null,"code":"import _asyncToGenerator from \"/home/xittz/Documentos/sa-bombeiros3/sa-bombeiros/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport 'ol/ol.css';\nimport 'ol/ol.css';\nlet TelaCadastroComponent = class TelaCadastroComponent {\n  constructor(route, authService, router, bombeiroService, snackbar) {\n    this.route = route;\n    this.authService = authService;\n    this.router = router;\n    this.bombeiroService = bombeiroService;\n    this.snackbar = snackbar;\n    this.edit = false;\n    this.cadastroForm = new FormGroup({\n      nome: new FormControl('', [Validators.required]),\n      senha: new FormControl('', [Validators.required]),\n      nomeDeGuerra: new FormControl(''),\n      matricula: new FormControl('', [Validators.required]),\n      perfilAcesso: new FormControl(''),\n      email: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnInit() {\n    this.subscription = this.route.url.subscribe(url => {\n      if (url.toString().includes('me')) {\n        this.bombeiro = this.authService.getUser();\n        this.update();\n        this.edit = true;\n      }\n    });\n  }\n\n  updateForm() {\n    var _a;\n\n    this.cadastroForm.setValue({\n      nome: this.bombeiro.nome || '',\n      email: this.bombeiro.email || '',\n      senha: this.bombeiro.senha || '',\n      matricula: ((_a = this.bombeiro) === null || _a === void 0 ? void 0 : _a.matricula) || '',\n      nomeDeGuerra: this.bombeiro.nomeDeGuerra || '',\n      perfilAcesso: this.bombeiro.perfilAcesso || ''\n    });\n  }\n\n  getBombeiroForm() {\n    if (!this.bombeiro) this.bombeiro = {};\n    this.bombeiro.nome = this.cadastroForm.value.nome;\n    this.bombeiro.email = this.cadastroForm.value.email;\n    this.bombeiro.senha = this.cadastroForm.value.senha;\n    this.bombeiro.perfilAcesso = this.cadastroForm.value.perfilAcesso;\n    this.bombeiro.matricula = this.cadastroForm.value.matricula;\n    this.bombeiro.nomeDeGuerra = this.cadastroForm.value.nomeDeGuerra;\n  }\n\n  update() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const bombeiroUp = yield _this.bombeiroService.update(_this.bombeiro.id, _this.bombeiro);\n\n        _this.snackbar.open('Bombeiro atualizado com sucesso', 'x', {\n          horizontalPosition: 'center',\n          verticalPosition: 'bottom',\n          panelClass: 'success'\n        });\n\n        return bombeiroUp;\n      } catch (error) {\n        _this.snackbar.open('Não foi possivel atualizar o bombeiro', 'x', {\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          panelClass: 'warn'\n        });\n\n        throw error;\n      }\n    })();\n  }\n\n  enviar() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.bombeiroService.create(_this2.cadastroForm.value); // this.cadastroForm.reset();\n\n      _this2.snackbar.open('Bombeiro criado com sucesso', 'x', {\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom',\n        panelClass: 'success'\n      });\n    })();\n  }\n\n};\nTelaCadastroComponent = __decorate([Component({\n  selector: 'app-tela-home',\n  templateUrl: './tela-cadastro.component.html',\n  styleUrls: ['./tela-cadastro.component.scss']\n})], TelaCadastroComponent);\nexport { TelaCadastroComponent };","map":{"version":3,"sources":["/home/xittz/Documentos/sa-bombeiros3/sa-bombeiros/src/app/tela-cadastro/tela-cadastro.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute ,Router } from '@angular/router';\nimport { BombeirosService } from '../services/bombeiro.service';\nimport 'ol/ol.css';\nimport 'ol/ol.css';\nimport { bombeiro } from '../models/bombeiro';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-tela-home',\n  templateUrl: './tela-cadastro.component.html',\n  styleUrls: ['./tela-cadastro.component.scss']\n})\n\nexport class TelaCadastroComponent implements OnInit {\n  edit = false;\n  bombeiro?: bombeiro;\n\n  constructor(private route: ActivatedRoute, private authService: AuthService, private router: Router, private bombeiroService: BombeirosService, private snackbar: MatSnackBar) { }\n  \n  subscription: any;\n\n  ngOnInit(): void {\n    this.subscription = this.route.url.subscribe((url) => {\n    if(url.toString().includes('me')) {\n      this.bombeiro = this.authService.getUser();\n      this.update()\n      this.edit = true;\n    }\n\n    })\n\n\n  }\n\n\n  updateForm() {\n    this.cadastroForm.setValue({\n      nome: this.bombeiro!.nome || '',\n      email: this.bombeiro!.email || '',\n      senha: this.bombeiro!.senha || '',\n      matricula: this.bombeiro?.matricula || '',\n      nomeDeGuerra: this.bombeiro!.nomeDeGuerra || '',\n      perfilAcesso: this.bombeiro!.perfilAcesso || '',\n    });\n  }\n\n\n  cadastroForm = new FormGroup({\n\n    nome: new FormControl('', [Validators.required]),\n    senha: new FormControl('', [Validators.required]),\n    nomeDeGuerra: new FormControl(''),\n    matricula: new FormControl('', [Validators.required]),\n    perfilAcesso: new FormControl(''),\n    email: new FormControl('', [Validators.required]),\n    \n  });\n\n \n\n\n\n\n  getBombeiroForm(){\n    if(!this.bombeiro) this.bombeiro = {} as bombeiro;\n\n    this.bombeiro!.nome = this.cadastroForm.value.nome;\n    this.bombeiro!.email = this.cadastroForm.value.email;\n    this.bombeiro!.senha = this.cadastroForm.value.senha;\n    this.bombeiro!.perfilAcesso = this.cadastroForm.value.perfilAcesso;\n    this.bombeiro!.matricula = this.cadastroForm.value.matricula;\n    this.bombeiro!.nomeDeGuerra = this.cadastroForm.value.nomeDeGuerra;\n  \n  }\n\n  private async update(){\n    try{\n      const bombeiroUp = await this.bombeiroService.update(this.bombeiro!.id!, this.bombeiro!);\n      this.snackbar.open('Bombeiro atualizado com sucesso', 'x',{\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom',\n        panelClass: 'success'\n\n      })\n      return bombeiroUp;\n    }catch(error){\n      this.snackbar.open('Não foi possivel atualizar o bombeiro', 'x', {\n        horizontalPosition: 'center',\n        verticalPosition: 'top',\n        panelClass: 'warn',\n      })\n      throw error;\n    }\n  }\n\n   async enviar(){\n     await this.bombeiroService.create(this.cadastroForm.value);\n    // this.cadastroForm.reset();\n    \n     this.snackbar.open('Bombeiro criado com sucesso', 'x', {\n             horizontalPosition: 'center',\n             verticalPosition: 'bottom',\n             panelClass: 'success'\n           })\n   }\n\n  // public async enviar(){\n  //   try{\n  //     const bombeiro = await this.bombeiroService.create(this.cadastroForm.value);\n  //     this.snackbar.open('Bombeiro criado com sucesso', 'x', {\n  //       horizontalPosition: 'center',\n  //       verticalPosition: 'bottom',\n  //       panelClass: 'success'\n  //     })\n  //     this.cadastroForm.reset();\n  //     return bombeiro;\n  //   }catch (error){\n  //     this.snackbar.open('Não foi possivel criar novo bombeiro', 'x', {\n  //       horizontalPosition: 'center',\n  //       verticalPosition: 'bottom',\n  //       panelClass: 'warn',\n  //     })\n  //     throw error;\n  //   }\n  // }\n\n\n\n\n\n  }\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}