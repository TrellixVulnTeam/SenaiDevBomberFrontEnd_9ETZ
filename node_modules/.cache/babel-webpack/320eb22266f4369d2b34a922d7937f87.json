{"ast":null,"code":"import _asyncToGenerator from \"/home/xittz/Documentos/sa-bombeiros3/sa-bombeiros/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DadosService {\n  //https://nominatim.org/release-docs/latest/\n  constructor(http) {\n    this.http = http;\n  }\n\n  getAddressFromLatLon(latitude, longitude) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.http.get('https://nominatim.openstreetmap.org/reverse', {\n        params: {\n          lat: latitude,\n          lon: longitude,\n          format: 'json'\n        }\n      }).toPromise();\n    })();\n  }\n\n  getLatLonFromAddress(logradouro, bairro, municipio, estado) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const query = `${logradouro} ${bairro} ${municipio} ${estado}`;\n      return _this2.http.get('https://nominatim.openstreetmap.org/search', {\n        params: {\n          q: query,\n          format: 'json'\n        }\n      }).toPromise();\n    })();\n  }\n\n  list() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this3.http.get('http://localhost:3000/dados').toPromise();\n    })();\n  }\n\n}\n\nDadosService.ɵfac = function DadosService_Factory(t) {\n  return new (t || DadosService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nDadosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DadosService,\n  factory: DadosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/xittz/Documentos/sa-bombeiros3/sa-bombeiros/src/app/services/dados.service.ts"],"names":[],"mappings":";;;AAMA,OAAM,MAAO,YAAP,CAAmB;AACvB;AACA,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,SAAA,IAAA,GAAA,IAAA;AAAoB;;AAElC,EAAA,oBAAoB,CACxB,QADwB,EAExB,SAFwB,EAEP;AAAA;;AAAA;AAEjB,aAAO,KAAI,CAAC,IAAL,CACJ,GADI,CACA,6CADA,EAC+C;AAClD,QAAA,MAAM,EAAE;AAAE,UAAA,GAAG,EAAE,QAAP;AAAiB,UAAA,GAAG,EAAE,SAAtB;AAAiC,UAAA,MAAM,EAAE;AAAzC;AAD0C,OAD/C,EAIJ,SAJI,EAAP;AAFiB;AAOlB;;AAEK,EAAA,oBAAoB,CACxB,UADwB,EAExB,MAFwB,EAGxB,SAHwB,EAIxB,MAJwB,EAIV;AAAA;;AAAA;AAEd,YAAM,KAAK,GAAG,GAAG,UAAU,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,EAA5D;AACA,aAAO,MAAI,CAAC,IAAL,CACJ,GADI,CACA,4CADA,EAC8C;AACjD,QAAA,MAAM,EAAE;AAAE,UAAA,CAAC,EAAE,KAAL;AAAY,UAAA,MAAM,EAAE;AAApB;AADyC,OAD9C,EAIJ,SAJI,EAAP;AAHc;AAQf;;AAEK,EAAA,IAAI,GAAA;AAAA;;AAAA;AACR,aAAO,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,6BAAd,EAA6C,SAA7C,EAAP;AADQ;AAET;;AA/BsB;;;mBAAZ,Y,EAAY,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAZ,Y;AAAY,EAAA,OAAA,EAAZ,YAAY,CAAA,I;AAAA,EAAA,UAAA,EAFX","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DadosService {\n  //https://nominatim.org/release-docs/latest/\n  constructor(private http: HttpClient) {}\n\n  async getAddressFromLatLon(\n    latitude: number,\n    longitude: number\n  ): Promise<any> {\n    return this.http\n      .get('https://nominatim.openstreetmap.org/reverse', {\n        params: { lat: latitude, lon: longitude, format: 'json' },\n      })\n      .toPromise();\n  }\n\n  async getLatLonFromAddress(\n    logradouro: string,\n    bairro: string,\n    municipio: string,\n    estado: string\n  ): Promise<any> {\n    const query = `${logradouro} ${bairro} ${municipio} ${estado}`;\n    return this.http\n      .get('https://nominatim.openstreetmap.org/search', {\n        params: { q: query, format: 'json' },\n      })\n      .toPromise();\n  }\n\n  async list(): Promise <any>{\n    return this.http.get('http://localhost:3000/dados').toPromise();\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}