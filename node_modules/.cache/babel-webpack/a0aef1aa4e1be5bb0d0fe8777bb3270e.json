{"ast":null,"code":"import _asyncToGenerator from \"/home/xittz/Documentos/sa-bombeiros3/sa-bombeiros/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport { XYZ } from 'ol/source';\nimport { Tile as TileLayer } from 'ol/layer';\nimport * as Proj from 'ol/proj.js'; //Converter cordenadas para lat e long\n\nimport 'ol/ol.css';\nimport { boundingExtent } from 'ol/extent';\nlet TelaHomeComponent = class TelaHomeComponent {\n  constructor(router, usuarioService) {\n    this.router = router;\n    this.usuarioService = usuarioService;\n    this.showFiller = false;\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.pontos = yield _this.usuarioService.list();\n\n      const map = _this.MapaCreate();\n\n      const cluster = _this.cluster();\n\n      map.addLayer(cluster);\n\n      _this.cliqueEventMapa(map, cluster);\n    })();\n  }\n\n  cliqueEventMapa(map, cluster) {\n    map.on('click', evento => {\n      cluster.getFeatures(evento.pixel).then(clickedFeatures => {\n        if (clickedFeatures.length) {\n          const features = clickedFeatures[0].get('features');\n\n          if (features.length > 1) {\n            const extent = boundingExtent(features.map(r => r.getGeometry().getCoordinates()));\n            map.getView().fit(extent, {\n              duration: 1000,\n              padding: [50, 50, 50, 50]\n            });\n          }\n        }\n      });\n    });\n  }\n\n  MapaCreate() {\n    const latitude = -48.613666;\n    const longitude = -27.595115;\n    const raster = new TileLayer({\n      source: new XYZ({\n        url: 'https://mt1.google.com/vt/lyrs=r&x={x}&y={y}&z={z}'\n      })\n    });\n    const map = new Map({\n      layers: [raster],\n      target: 'map',\n      view: new View({\n        center: Proj.fromLonLat([latitude, longitude]),\n        zoom: 14\n      })\n    });\n    return map;\n  }\n\n  ngOnInit() {}\n\n  telaConfigs() {\n    let alterado = false;\n    this.router.navigate(['/telaHome/telaConfig']);\n    alterado = true;\n\n    if (alterado = true) {\n      this.router.navigate(['/telaHome/']);\n      alterado = false;\n    }\n  }\n\n};\nTelaHomeComponent = __decorate([Component({\n  selector: 'app-tela-home',\n  templateUrl: './tela-home.component.html',\n  styleUrls: ['./tela-home.component.scss']\n})], TelaHomeComponent);\nexport { TelaHomeComponent };","map":{"version":3,"sources":["/home/xittz/Documentos/sa-bombeiros3/sa-bombeiros/src/app/tela-home/tela-home.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAAiC,eAAjC;AAEA,OAAO,WAAP;AACA,OAAO,GAAP,MAAgB,QAAhB;AACA,OAAO,IAAP,MAAiB,SAAjB;AACA,SAAQ,GAAR,QAAoD,WAApD;AACA,SAAQ,IAAI,IAAI,SAAhB,QAAuD,UAAvD;AACA,OAAO,KAAK,IAAZ,MAAsB,YAAtB,C,CAAmC;;AACnC,OAAO,WAAP;AAUA,SAAQ,cAAR,QAA6B,WAA7B;AASA,IAAa,iBAAiB,GAA9B,MAAa,iBAAb,CAA8B;AAE5B,EAAA,WAAA,CAAoB,MAApB,EACW,cADX,EACwC;AADpB,SAAA,MAAA,GAAA,MAAA;AACT,SAAA,cAAA,GAAA,cAAA;AAiEX,SAAA,UAAA,GAAa,KAAb;AAjE6C;;AAG5C,EAAA,QAAQ,GAAA,CAAK;;AAER,EAAA,eAAe,GAAA;AAAA;;AAAA;AAEnB,MAAA,KAAI,CAAC,MAAL,SAAoB,KAAI,CAAC,cAAL,CAAoB,IAApB,EAApB;;AACA,YAAM,GAAG,GAAG,KAAI,CAAC,UAAL,EAAZ;;AACA,YAAM,OAAO,GAAG,KAAI,CAAC,OAAL,EAAhB;;AACA,MAAA,GAAG,CAAC,QAAJ,CAAa,OAAb;;AACA,MAAA,KAAI,CAAC,eAAL,CAAqB,GAArB,EAA0B,OAA1B;AANmB;AAOpB;;AAGO,EAAA,eAAe,CAAC,GAAD,EAAW,OAAX,EAAuB;AAC5C,IAAA,GAAG,CAAC,EAAJ,CAAO,OAAP,EAAiB,MAAD,IAAW;AACzB,MAAA,OAAO,CAAC,WAAR,CAAoB,MAAM,CAAC,KAA3B,EAAkC,IAAlC,CAAwC,eAAD,IAAyB;AAC9D,YAAI,eAAe,CAAC,MAApB,EAA4B;AAC1B,gBAAM,QAAQ,GAAG,eAAe,CAAC,CAAD,CAAf,CAAmB,GAAnB,CAAuB,UAAvB,CAAjB;;AACA,cAAI,QAAQ,CAAC,MAAT,GAAkB,CAAtB,EAAyB;AACvB,kBAAM,MAAM,GAAG,cAAc,CAC3B,QAAQ,CAAC,GAAT,CAAc,CAAD,IAAY,CAAC,CAAC,WAAF,GAAgB,cAAhB,EAAzB,CAD2B,CAA7B;AAGA,YAAA,GAAG,CACA,OADH,GAEG,GAFH,CAEO,MAFP,EAEe;AAAE,cAAA,QAAQ,EAAE,IAAZ;AAAkB,cAAA,OAAO,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb;AAA3B,aAFf;AAGD;AACF;AACF,OAZD;AAaD,KAdD;AAeD;;AAGO,EAAA,UAAU,GAAA;AAEhB,UAAM,QAAQ,GAAG,CAAC,SAAlB;AACA,UAAM,SAAS,GAAG,CAAC,SAAnB;AAEA,UAAM,MAAM,GAAG,IAAI,SAAJ,CAAc;AAC3B,MAAA,MAAM,EAAE,IAAI,GAAJ,CAAQ;AAEd,QAAA,GAAG,EAAE;AAFS,OAAR;AADmB,KAAd,CAAf;AAQA,UAAM,GAAG,GAAG,IAAI,GAAJ,CAAQ;AAClB,MAAA,MAAM,EAAE,CAAC,MAAD,CADU;AAElB,MAAA,MAAM,EAAE,KAFU;AAGlB,MAAA,IAAI,EAAE,IAAI,IAAJ,CAAS;AACb,QAAA,MAAM,EAAE,IAAI,CAAC,UAAL,CAAgB,CAAC,QAAD,EAAW,SAAX,CAAhB,CADK;AAEb,QAAA,IAAI,EAAE;AAFO,OAAT;AAHY,KAAR,CAAZ;AAQA,WAAO,GAAP;AACD;;AAIA,EAAA,QAAQ,GAAA,CAAK;;AASb,EAAA,WAAW,GAAA;AAEV,QAAI,QAAQ,GAAG,KAAf;AACA,SAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,sBAAD,CAArB;AACA,IAAA,QAAQ,GAAG,IAAX;;AAEA,QAAG,QAAQ,GAAG,IAAd,EAAmB;AACjB,WAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,YAAD,CAArB;AAAsC,MAAA,QAAQ,GAAG,KAAX;AACvC;AAEA;;AAlFyB,CAA9B;AAAa,iBAAiB,GAAA,UAAA,CAAA,CAN7B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,eADD;AAET,EAAA,WAAW,EAAE,4BAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,4BAAD;AAHF,CAAD,CAMoB,CAAA,EAAjB,iBAAiB,CAAjB;SAAA,iB","sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport {XYZ, Cluster,  Vector as VectorSource} from 'ol/source';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\nimport * as Proj from 'ol/proj.js';//Converter cordenadas para lat e long\nimport 'ol/ol.css';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport {\n  Circle as CircleStyle,\n  Fill,\n  Stroke,\n  Style,\n  Text,\n} from 'ol/style';\nimport {boundingExtent} from 'ol/extent';\nimport { UsuarioService } from '../services/usuario.service';\n\n@Component({\n  selector: 'app-tela-home',\n  templateUrl: './tela-home.component.html',\n  styleUrls: ['./tela-home.component.scss']\n})\n\nexport class TelaHomeComponent implements OnInit {\n\n  constructor(private router: Router,\n     private usuarioService:UsuarioService) { }\n  pontos: any;\n\n   ngOnInit() {}\n\n  async ngAfterViewInit(){\n  \n    this.pontos = await this.usuarioService.list();\n    const map = this.MapaCreate();\n    const cluster = this.cluster();\n    map.addLayer(cluster);\n    this.cliqueEventMapa(map, cluster);\n  }\n\n\n  private cliqueEventMapa(map: Map, cluster: any) {\n    map.on('click', (evento) => {\n      cluster.getFeatures(evento.pixel).then((clickedFeatures: any) => {\n        if (clickedFeatures.length) {\n          const features = clickedFeatures[0].get('features');\n          if (features.length > 1) {\n            const extent = boundingExtent(\n              features.map((r: any) => r.getGeometry().getCoordinates())\n            );\n            map\n              .getView()\n              .fit(extent, { duration: 1000, padding: [50, 50, 50, 50] });\n          }\n        }\n      });\n    });\n  }\n\n\n  private MapaCreate(){\n\n    const latitude = -48.613666;\n    const longitude = -27.595115\n\n    const raster = new TileLayer({\n      source: new XYZ({\n\n        url: 'https://mt1.google.com/vt/lyrs=r&x={x}&y={y}&z={z}',\n     \n      }),\n    });\n\n    const map = new Map({\n      layers: [raster],\n      target: 'map',\n      view: new View({\n        center: Proj.fromLonLat([latitude, longitude]),\n        zoom: 14,\n      }),\n    });\n    return map;\n  }\n\n  \n\n   ngOnInit() {}\n\n\n\n\n  showFiller = false;\n\n\n\n   telaConfigs(): void {\n\n    let alterado = false;\n    this.router.navigate(['/telaHome/telaConfig']);\n    alterado = true;\n\n    if(alterado = true){\n      this.router.navigate(['/telaHome/']); alterado = false;\n    }\n\n    }\n\n\n  }\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}